package com.timesheet.demo.model;

import java.util.ArrayList;
import java.util.List;

import javax.persistence.CascadeType;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinTable;
import javax.persistence.ManyToMany;
import javax.persistence.OneToMany;
import javax.persistence.OneToOne;
import javax.persistence.Table;

import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;

import lombok.Data;

@Entity
@Table(name="team")
@Data
public class Team {
	
	
	@Id
	@GeneratedValue(strategy=GenerationType.IDENTITY)
	private int idTeam;
	
	private String name;
	private String description_Team;
	private boolean active_Team;
	
	
	@OneToOne(fetch = FetchType.LAZY )
	@JsonIgnoreProperties(value = {"applications", "hibernateLazyInitializer"})
	private TeamLead teamLead;
	
	
	/*
	@ManyToMany(mappedBy = "teams")
	@JsonIgnore
	List<Employee> employees;
	
	@ManyToMany(mappedBy = "teams")
	List<Project> projects;
	*/

	/*
	@ManyToMany
	@JoinTable(
	  name = "project_team", 
	  joinColumns = @JoinColumn(name = "idTeam"), 
	  inverseJoinColumns = @JoinColumn(name = "idProject"))
	@JsonIgnore
	private List<Project> projects;
*/
	@JsonIgnore
	@ManyToMany
	@JoinTable(
	  name = "team_employee", 
	  joinColumns = @JoinColumn(name = "idEmployee"), 
	  inverseJoinColumns = @JoinColumn(name = "idTeam"))
	private List<Employee> employees;
	
	@JsonIgnore
	@ManyToMany
	@JoinTable(
	name = "team_project", 
	  joinColumns = @JoinColumn(name = "idProject"), 
	  inverseJoinColumns = @JoinColumn(name = "idTeam"))
	private List<Project> projects;
}
